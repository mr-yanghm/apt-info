[{"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\index.js":"1","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\service\\dataApi.js":"2","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\app.jsx":"3","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\AptInfo.jsx":"4","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\SearchBar.jsx":"5","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\Hooks\\useInputs.jsx":"6","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\FilterBox.jsx":"7","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\Footer.jsx":"8"},{"size":383,"mtime":1612941761852,"results":"9","hashOfConfig":"10"},{"size":7314,"mtime":1612959690852,"results":"11","hashOfConfig":"10"},{"size":5107,"mtime":1612956009440,"results":"12","hashOfConfig":"10"},{"size":3346,"mtime":1612956485564,"results":"13","hashOfConfig":"10"},{"size":1612,"mtime":1612956536185,"results":"14","hashOfConfig":"10"},{"size":973,"mtime":1612875218526,"results":"15","hashOfConfig":"10"},{"size":1160,"mtime":1612956419927,"results":"16","hashOfConfig":"10"},{"size":653,"mtime":1612956846614,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oq63fv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\index.js",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\service\\dataApi.js",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\app.jsx",["36","37","38","39","40","41","42"],"import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useState,\r\n} from \"react\";\r\nimport \"./app.css\";\r\nimport AptInfo from \"./components/AptInfo\";\r\nimport Footer from \"./components/Footer\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport useInputs from \"./Hooks/useInputs\";\r\n\r\nconst initialState = {\r\n  searchRangeList: [1],\r\n  selectedRangeIndex: 0,\r\n  filters: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"REGIST_FILTER\":\r\n      return {\r\n        // inputs: initialState.inputs,\r\n        ...state, // 위와 같은 표현\r\n        filters: [...state.filters, { ...action.filter, id: new Date() }],\r\n      };\r\n    case \"REMOVE_FILTER\":\r\n      return {\r\n        ...state,\r\n        filters: state.filters.filter(\r\n          (filter) => filter.id !== action.filter.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst App = ({ openApi }) => {\r\n  const [searchRangeList, setSearchRangeList] = useState(\r\n    initialState.searchRangeList\r\n  );\r\n  const [selectedRangeIndex, setSelectedRangeIndex] = useState(\r\n    initialState.selectedRangeIndex\r\n  );\r\n  const [allAptInfo, setAllAptInfo] = useState([]);\r\n  const [yulgokAptInfo, setYulgokAptInfo] = useState({});\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [nearAptPriceInfo, setNearAptPriceInfo] = useState([]);\r\n\r\n  const [{ aptName, aptSize }, onChange, reset] = useInputs({\r\n    aptName: \"\",\r\n    aptSize: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    openApi\r\n      .getAllAptInfo({ calcMonth: searchRangeList[selectedRangeIndex] })\r\n      .then((data) => {\r\n        setAllAptInfo(data);\r\n        setYulgokAptInfo(\r\n          openApi.getFilterAptInfo({ items: data, filterAptName: \"율곡\" })\r\n        );\r\n        setNearAptPriceInfo(\r\n          openApi.getFilterAptInfo({ items: data }).newestDealApts\r\n        );\r\n        // console.log(openApi.getFilterAptInfo({ items: data }));\r\n\r\n        let initFilter = [\r\n          { aptName: \"한라\", aptSize: 41.85 },\r\n          { aptName: \"한라\", aptSize: 51.66 },\r\n          { aptName: \"래미안\", aptSize: 59.94 },\r\n          { aptName: \"충무\", aptSize: 41.4 },\r\n          { aptName: \"충무\", aptSize: 41.85 },\r\n          { aptName: \"충무\", aptSize: 42.75 },\r\n          { aptName: \"충무\", aptSize: 44.06 },\r\n          { aptName: \"세종\", aptSize: 58.46 },\r\n          { aptName: \"세종\", aptSize: 58.71 },\r\n          { aptName: \"우륵\", aptSize: 58.46 },\r\n          { aptName: \"우륵\", aptSize: 58.71 },\r\n        ];\r\n        const filterSaved = localStorage.getItem(\"aptInfoFilter\");\r\n        if (filterSaved && JSON.parse(filterSaved).length) {\r\n          initFilter = JSON.parse(filterSaved);\r\n        }\r\n        for (const filter of initFilter) {\r\n          dispatch({\r\n            type: \"REGIST_FILTER\",\r\n            filter: {\r\n              aptName: filter.aptName,\r\n              aptSize: filter.aptSize,\r\n            },\r\n          });\r\n        }\r\n      });\r\n  }, [searchRangeList]);\r\n\r\n  const handleChange = (event) => {\r\n    openApi.getAllAptInfo({ calcMonth: event.target.value }).then((data) => {\r\n      setAllAptInfo(data);\r\n      setYulgokAptInfo(\r\n        openApi.getFilterAptInfo({ items: data, filterAptName: \"율곡\" })\r\n      );\r\n      setNearAptPriceInfo(\r\n        openApi.getFilterAptInfo({ items: data }).newestDealApts\r\n      );\r\n    });\r\n  };\r\n\r\n  const { filters } = state;\r\n\r\n  const onFilterRegist = useCallback(() => {\r\n    dispatch({\r\n      type: \"REGIST_FILTER\",\r\n      filter: {\r\n        aptName: aptName,\r\n        aptSize: aptSize,\r\n      },\r\n    });\r\n  });\r\n\r\n  const onFilterDelete = useCallback((filter) => {\r\n    dispatch({\r\n      type: \"REMOVE_FILTER\",\r\n      filter: {\r\n        id: filter.id,\r\n        aptName: filter.aptName,\r\n        aptSize: filter.aptSize,\r\n      },\r\n    });\r\n  });\r\n\r\n  const onFilterSave = () => {\r\n    localStorage.setItem(\"aptInfoFilter\", JSON.stringify(filters));\r\n  };\r\n\r\n  const onFilterReset = () => {\r\n    localStorage.removeItem(\"aptInfoFilter\");\r\n  };\r\n\r\n  useMemo(() => {\r\n    const result = [];\r\n    for (const filter of filters) {\r\n      result.push(\r\n        ...openApi.getFilterAptInfo({\r\n          items: allAptInfo,\r\n          filterAptName: filter.aptName,\r\n          filterAptSize: filter.aptSize,\r\n        }).newestDealApts\r\n      );\r\n    }\r\n    if (filters.length === 0 && allAptInfo.length > 0) {\r\n      result.push(\r\n        ...openApi.getFilterAptInfo({ items: allAptInfo }).newestDealApts\r\n      );\r\n    }\r\n    setNearAptPriceInfo(result);\r\n  }, [filters]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        handleChange={handleChange}\r\n        searchRangeList={searchRangeList}\r\n        aptName={aptName}\r\n        aptSize={aptSize}\r\n        onChange={onChange}\r\n        onFilterRegist={onFilterRegist}\r\n        onFilterDelete={onFilterDelete}\r\n        filters={filters}\r\n        onFilterSave={onFilterSave}\r\n        onFilterReset={onFilterReset}\r\n      />\r\n      <AptInfo aptInfo={yulgokAptInfo} nearAptPriceInfo={nearAptPriceInfo} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\AptInfo.jsx",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\SearchBar.jsx",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\Hooks\\useInputs.jsx",["43"],"import { useCallback, useReducer } from \"react\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        [action.name]: action.value\r\n      };\r\n    case 'RESET':\r\n      return Object.keys(state).reduce((acc, current) => {\r\n        acc[current] = '';\r\n        return acc;\r\n      }, {});\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst useInputs = (initialForm) => {\r\n  const [form, dispatch] = useReducer(reducer, initialForm);\r\n  //change\r\n  const onChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"CHANGE\", name, value });\r\n  }, []);\r\n\r\n  // 방법 1\r\n  // const reset = useCallback(() => dispatch({ type: \"RESET\", form: initialForm }, [initialForm]));\r\n\r\n  // 방법 2\r\n  const reset = useCallback(() => dispatch({ type: \"RESET\" }, []));\r\n\r\n  // setForm(initialForm), [initialForm]);\r\n  return [form, onChange, reset];\r\n};\r\n\r\nexport default useInputs;\r\n","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\FilterBox.jsx",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\Footer.jsx",[],{"ruleId":"44","severity":1,"message":"45","line":41,"column":27,"nodeType":"46","messageId":"47","endLine":41,"endColumn":45},{"ruleId":"44","severity":1,"message":"48","line":44,"column":30,"nodeType":"46","messageId":"47","endLine":44,"endColumn":51},{"ruleId":"44","severity":1,"message":"49","line":52,"column":42,"nodeType":"46","messageId":"47","endLine":52,"endColumn":47},{"ruleId":"50","severity":1,"message":"51","line":97,"column":6,"nodeType":"52","endLine":97,"endColumn":23,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":113,"column":26,"nodeType":"46","endLine":113,"endColumn":37},{"ruleId":"50","severity":1,"message":"54","line":123,"column":26,"nodeType":"46","endLine":123,"endColumn":37},{"ruleId":"50","severity":1,"message":"55","line":159,"column":6,"nodeType":"52","endLine":159,"endColumn":15,"suggestions":"56"},{"ruleId":"50","severity":1,"message":"54","line":32,"column":17,"nodeType":"46","endLine":32,"endColumn":28},"no-unused-vars","'setSearchRangeList' is assigned a value but never used.","Identifier","unusedVar","'setSelectedRangeIndex' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'openApi' and 'selectedRangeIndex'. Either include them or remove the dependency array. If 'setYulgokAptInfo' needs the current value of 'openApi', you can also switch to useReducer instead of useState and read 'openApi' in the reducer.","ArrayExpression",["57"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useMemo has missing dependencies: 'allAptInfo' and 'openApi'. Either include them or remove the dependency array.",["58"],{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [openApi, searchRangeList, selectedRangeIndex]",{"range":"63","text":"64"},"Update the dependencies array to be: [allAptInfo, filters, openApi]",{"range":"65","text":"66"},[2935,2952],"[openApi, searchRangeList, selectedRangeIndex]",[4491,4500],"[allAptInfo, filters, openApi]"]
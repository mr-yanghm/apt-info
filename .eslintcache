[{"/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/index.js":"1","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/service/dataApi.js":"2","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/app.jsx":"3","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/Footer.jsx":"4","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/Hooks/useInputs.jsx":"5","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/SearchBar.jsx":"6","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/AptInfo.jsx":"7","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/FilterBox.jsx":"8"},{"size":368,"mtime":1612992966542,"results":"9","hashOfConfig":"10"},{"size":8961,"mtime":1626183117648,"results":"11","hashOfConfig":"10"},{"size":8541,"mtime":1627306486094,"results":"12","hashOfConfig":"10"},{"size":742,"mtime":1614562284530,"results":"13","hashOfConfig":"10"},{"size":1145,"mtime":1614562284529,"results":"14","hashOfConfig":"10"},{"size":3470,"mtime":1626960444698,"results":"15","hashOfConfig":"10"},{"size":5629,"mtime":1626961912614,"results":"16","hashOfConfig":"10"},{"size":1131,"mtime":1614562284530,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4sho56",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/index.js",[],["40","41"],"/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/service/dataApi.js",[],"/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/app.jsx",["42","43","44","45","46","47","48","49","50"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from \"react\";\nimport \"./app.css\";\nimport AptInfo from \"./components/AptInfo\";\nimport Footer from \"./components/Footer\";\nimport SearchBar from \"./components/SearchBar\";\nimport useInputs from \"./Hooks/useInputs\";\nimport { CircularProgress } from '@material-ui/core';\n\nconst initialState = {\n  inquiryPeriodList: [1, 3, 6, 12],\n  selectedRangeIndex: 0,\n  filters: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"REGIST_FILTER\":\n      const sameFilter = state.filters.filter((data) => {\n        return data.aptSize === action.filter.aptSize && data.aptName === action.filter.aptName;\n      });\n      return sameFilter.length === 0 ? {\n        // inputs: initialState.inputs,\n        ...state, // 위와 같은 표현\n        filters: [...state.filters, { ...action.filter, id: new Date() }],\n      } : {...state};\n    case \"REGIST_FILTERS\":\n      return {\n        // inputs: initialState.inputs,\n        ...state, // 위와 같은 표현\n        filters: action.filters.map((filter) => ({ ...filter, id: new Date() })),\n      };\n    case \"REMOVE_FILTER\":\n      return {\n        ...state,\n        filters: state.filters.filter(\n          (filter) => filter.id !== action.filter.id\n        ),\n      };\n    case \"RESET_FILTER\":\n      return {\n        ...action.initialState\n      };\n    default:\n      return state;\n  }\n}\n\nconst App = ({ openApi }) => {\n  let [loadingIndicator, setLoadingIndicator] = useState(true);\n\n  const [isVisibleSearchbox, setIsVisibleSearchbox] = useState(false);\n\n  const [inquiryPeriodList, setInquiryPeriodList] = useState(\n    initialState.inquiryPeriodList\n  );\n  const [allAptInfo, setAllAptInfo] = useState([]);\n  const [yulgokAptInfo, setYulgokAptInfo] = useState({});\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [nearAptPriceInfo, setNearAptPriceInfo] = useState([]);\n  const [aptNameList, setAptNameList] = useState([]);\n  const [aptSizeObj, setAptSizeObj] = useState({});\n  const [selectedSizeList, setSelectedSizeList] = useState([]);\n\n  const [{ aptName, aptSize, inquiryPeriod }, onChange, onSet, reset] = useInputs({\n    aptName: \"\",\n    aptSize: \"\",\n    inquiryPeriod: \"1\",\n  });\n\n  const onLoading = () => {\n    setLoadingIndicator(true);\n  }\n\n  const offLoading = () => {\n    setLoadingIndicator(false);\n  }\n\n  const { filters } = state;\n\n  /**\n   * 1. 컴포넌트가 마운트 되면 아파트 정보를 조회한 후 저장된 Filter 또는 기본 Filter 로 필터링하여 화면에 출력한다.\n   */\n\n  useEffect(() => {\n    setSelectedSizeList(aptSizeObj[aptName]);\n    aptSizeObj[aptName] && onSet({ name: 'aptSize', value: aptSizeObj[aptName][0] });\n  }, [aptName]);\n\n  useEffect(() => {\n    onLoading();\n    openApi\n      .getAllAptInfo({ calcMonth: inquiryPeriod })\n      .then((data) => {\n        console.log(`data : ${data.length}`);\n        setAllAptInfo(data);\n      });\n  }, [inquiryPeriod]);\n\n  useEffect(() => {\n    if (!allAptInfo.length) {\n      return;\n    }\n    console.log(`allAptInfo useMemo`);\n    setYulgokAptInfo(\n      openApi.getFilterAptInfo({ items: allAptInfo, filterAptName: \"율곡\" })\n    );\n    // console.log(openApi.getFilterAptInfo({ items: allAptInfo }).newestDealApts);\n    setNearAptPriceInfo(\n      openApi.getFilterAptInfo({ items: allAptInfo }).newestDealApts\n    );\n    const aptNameList = openApi.getAptNameList({ items: allAptInfo });\n    setAptNameList(aptNameList);\n    const aptSizeList = openApi.getAptSizeList({ items: allAptInfo, names: aptNameList });\n\n    setAptSizeObj(aptSizeList);\n\n    // dispatch({\n    //   type: \"RESET_FILTER\",\n    //   initialState,\n    // })\n\n    console.log(filters);\n    let initFilter = [...filters];\n\n    if (!filters.length) {\n\n      initFilter = [\n        { aptName: \"한라주공4\", aptSize: 41.85 },\n        { aptName: \"한라주공4\", aptSize: 51.66 },\n        { aptName: \"래미안 하이어스\", aptSize: 59.94 },\n        { aptName: \"충무주공(873-2)\", aptSize: 41.4 },\n        { aptName: \"충무주공(872)\", aptSize: 41.85 },\n        { aptName: \"충무주공(872)\", aptSize: 42.75 },\n        { aptName: \"충무주공(872)\", aptSize: 44.06 },\n        { aptName: \"세종\", aptSize: 58.46 },\n        { aptName: \"세종\", aptSize: 58.71 },\n        { aptName: \"우륵\", aptSize: 58.46 },\n        { aptName: \"우륵\", aptSize: 58.71 },\n      ];\n      const filterSaved = localStorage.getItem(\"aptInfoFilter\");\n      if (filterSaved && JSON.parse(filterSaved).length) {\n        initFilter = JSON.parse(filterSaved);\n        document.querySelector('.filter-addon').style.display = 'block';\n      }\n      // console.log(initFilter);\n      // for (const filter of initFilter) {\n      //   dispatch({\n      //     type: \"REGIST_FILTER\",\n      //     filter: {\n      //       aptName: filter.aptName,\n      //       aptSize: filter.aptSize,\n      //     },\n      //   });\n      // }\n    }\n    dispatch({\n      type: \"REGIST_FILTERS\",\n      filters: initFilter,\n    });\n\n  }, [allAptInfo])\n\n  useMemo(() => {\n    const result = [];\n    for (const filter of filters) {\n      result.push(\n        ...openApi.getFilterAptInfo({\n          items: allAptInfo,\n          filterAptName: filter.aptName,\n          filterAptSize: filter.aptSize,\n        }).newestDealApts\n      );\n    }\n    if (filters.length === 0 && allAptInfo.length > 0) {\n      result.push(\n        ...openApi.getFilterAptInfo({ items: allAptInfo }).newestDealApts\n      );\n    }\n    setNearAptPriceInfo(result);\n    offLoading();\n    console.log(`filter update`);\n  }, [filters]);\n\n  const onSearchRangeChange = (event) => {\n    openApi.getAllAptInfo({ calcMonth: event.target.value }).then((data) => {\n      setAllAptInfo(data);\n      setYulgokAptInfo(\n        openApi.getFilterAptInfo({ items: data, filterAptName: \"율곡\" })\n      );\n      setNearAptPriceInfo(\n        openApi.getFilterAptInfo({ items: data }).newestDealApts\n      );\n    });\n  };\n\n  const onFilterRegist = useCallback(() => {\n    if (!aptName){\n      alert('아파트명을 선택하세요.');\n      document.querySelector(\"#aptName\").focus();\n      return ;\n    }\n\n    console.log(`aptSize :: ${aptSize}`)\n    if (!aptSize){\n      alert('전용면적을 선택하세요.');\n      document.querySelector(\"#aptSize\").focus();\n      return ;\n    }\n\n    dispatch({\n      type: \"REGIST_FILTER\",\n      filter: {\n        aptName: aptName,\n        aptSize: Number(aptSize),\n      },\n    });\n    document.querySelector('.filter-addon').style.display = 'block';\n  });\n\n  const onFilterDelete = useCallback((filter) => {\n    dispatch({\n      type: \"REMOVE_FILTER\",\n      filter: {\n        id: filter.id,\n        aptName: filter.aptName,\n        aptSize: filter.aptSize,\n      },\n    });\n    document.querySelector('.filter-addon').style.display = 'block';\n  });\n\n  const onFilterSave = () => {\n    if (window.confirm('이 기능은 새로고침해도 현재 필터를 유지하는 기능입니다. 필터를 저장하시겠습니까?')) {\n      localStorage.setItem(\"aptInfoFilter\", JSON.stringify(filters));\n    }\n  };\n\n  const onFilterReset = () => {\n    localStorage.removeItem(\"aptInfoFilter\");\n    alert('로컬에 저장된 필터가 초기화 되었습니다.');\n    document.location.reload();\n  };\n\n  const onClickAddFilter = () => {\n    setIsVisibleSearchbox(!isVisibleSearchbox);\n    console.log('onClickAddFilter clicked~!');\n  };\n\n\n  return (\n    <>\n      {loadingIndicator === true ? (\n        <div className=\"modal\">\n          <div className=\"modalContent\">\n            <CircularProgress className=\"spinner\" />\n          </div>\n          <div className=\"modalLayer\"></div>\n        </div>\n      ) : null}\n      <AptInfo\n        aptInfo={yulgokAptInfo}\n        nearAptPriceInfo={nearAptPriceInfo}\n        onClickAddFilter={onClickAddFilter}\n        filters={filters || []}\n        onFilterDelete={onFilterDelete}\n        isVisibleSearchbox={isVisibleSearchbox}\n      />\n      <SearchBar\n        // onSearchRangeChange={onSearchRangeChange}\n        inquiryPeriodList={inquiryPeriodList}\n        aptName={aptName}\n        aptSize={aptSize}\n        onChange={onChange}\n        onFilterRegist={onFilterRegist}\n        onFilterDelete={onFilterDelete}\n        filters={filters || []}\n        onFilterSave={onFilterSave}\n        onFilterReset={onFilterReset}\n        aptNameList={aptNameList}\n        selectedSizeList={selectedSizeList}\n        isVisibleSearchbox={isVisibleSearchbox}\n      />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/Footer.jsx",[],"/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/Hooks/useInputs.jsx",["51"],"import { useCallback, useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        [action.name]: action.value\n      };\n    case 'SET':\n      return {\n        ...state,\n        [action.name]: action.value\n      };\n    case 'RESET':\n      return Object.keys(state).reduce((acc, current) => {\n        acc[current] = '';\n        return acc;\n      }, {});\n    default:\n      return state;\n  }\n}\n\nconst useInputs = (initialForm) => {\n  const [form, dispatch] = useReducer(reducer, initialForm);\n  //change\n  const onChange = useCallback((e) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"CHANGE\", name, value });\n  }, []);\n\n  const onSet = useCallback(({ name, value }) => {\n    dispatch({ type: \"CHANGE\", name, value });\n  }, []);\n\n  // 방법 1\n  // const reset = useCallback(() => dispatch({ type: \"RESET\", form: initialForm }, [initialForm]));\n\n  // 방법 2\n  const reset = useCallback(() => dispatch({ type: \"RESET\" }, []));\n\n  // setForm(initialForm), [initialForm]);\n  return [form, onChange, onSet, reset];\n};\n\nexport default useInputs;\n","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/SearchBar.jsx",["52","53"],"import React from \"react\";\nimport FilterBox from \"./FilterBox\";\n\nconst SearchBar = ({\n  inquiryPeriodList,\n  onSearchRangeChange,\n  onChange,\n  onFilterRegist,\n  filters,\n  onFilterDelete,\n  onFilterSave,\n  onFilterReset,\n  aptNameList,\n  selectedSizeList,\n  isVisibleSearchbox\n}) => {\n  return (\n    <article className=\"searchBox\" className={isVisibleSearchbox ? \"\" : \"inVisible\"}>\n      <div className=\"\">\n        <label htmlFor=\"inquiryPeriod\">조회기간 : (현재월을 제외한 최근)</label>\n        <div className=\"display-flex\">\n          <span></span>\n          <select name=\"inquiryPeriod\" id=\"inquiryPeriod\" onChange={onChange} className=\"width25\">\n            {inquiryPeriodList.map((value, index) => (\n              <option key={index} value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n          <span>개월</span>\n        </div>\n      </div>\n      <div>\n        <h1>인근아파트 시세 필터</h1>\n        <div>\n          <label htmlFor=\"aptName\">아파트명 : ({aptNameList && aptNameList.length})</label>\n          {/* <input type=\"text\" name=\"aptName\" id=\"aptName\" onChange={onChange} /> */}\n          <select name=\"aptName\" id=\"aptName\" onChange={onChange}>\n            <option value=\"\">선택하세요</option>\n            {\n              aptNameList && aptNameList.map((name, index) => {\n                return <option key={index} value={name}>{name}</option>\n              })\n            }\n          </select>\n          <br />\n          <label htmlFor=\"aptSize\">전용면적 : ({selectedSizeList && selectedSizeList.length})</label>\n          {/* <input type=\"text\" name=\"aptSize\" id=\"aptSize\" onChange={onChange} /> */}\n          <select name=\"aptSize\" id=\"aptSize\" onChange={onChange}>\n            <option value=\"\">선택하세요</option>\n            {\n              selectedSizeList && selectedSizeList.map((name, index) => {\n                return <option key={index} value={name}>{name}</option>\n              })\n            }\n          </select>\n        </div>\n        <div className=\"filter-control-box\">\n          <button onClick={onFilterRegist} className=\"habit-button regist\">필터 등록</button>\n        </div>\n        {/* <FilterBox filters={filters} onFilterDelete={onFilterDelete} /> */}\n        <p>\n          ※ 모든 필터를 삭제할 시 인근아파트 최근 시세에 전체 아파트 정보가 나옵니다.\n        </p>\n        <hr />\n        <div className=\"filter-addon display-none\">\n          <span className=\"filter-control-box\">\n            <button onClick={onFilterSave} className=\"habit-button save\">\n              필터 저장\n            </button>\n            <button onClick={onFilterReset} className=\"habit-button reset\">\n              필터 초기화\n            </button>\n          </span>\n          <ul>\n            <li>\n              <p>\n                필터 저장 : 로컬에 필터를 저장함. 새로고침해도 저장한 필터 기준으로 화면에 보임\n              </p>\n            </li>\n            <li>\n              <p>\n                필터 초기화 : 브라우저에 저장된 필터를 초기화. 새로고침시 적용\n              </p>\n            </li>\n          </ul>\n        </div>\n        {/* <div className=\"filter-show habit-button\">\n          <button onClick=\"\"><i className=\"fas fa-plus-square\"></i> 기능 더보기</button>\n        </div> */}\n      </div>\n    </article>\n  );\n};\n\nexport default SearchBar;\n","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/AptInfo.jsx",["54","55"],"import React, { useState } from \"react\";\n\nexport function to_date_format(date_str) {\n    const gubun = \"-\";\n    var yyyyMMdd = String(date_str);\n    var sYear = yyyyMMdd.substring(0, 4);\n    var sMonth = yyyyMMdd.substring(4, 6);\n    var sDate = yyyyMMdd.substring(6, 8);\n\n    return sYear + gubun + sMonth + gubun + sDate;\n}\n\nconst AptInfo = ({\n    aptInfo: { highestPriceApts, newestDealApts },\n    nearAptPriceInfo,\n    onClickAddFilter,\n    filters,\n    onFilterDelete,\n    isVisibleSearchbox\n}) => {\n    const [filter, setFilter] = useState({});\n    const onDelete = (target) => {\n        console.log('onDelete click~!', target);\n        console.log('filters~!', filters);\n        const filter = filters.filter((data) => {\n            return data.aptName === target.아파트 && data.aptSize === target.전용면적;\n        })[0];\n        console.log('onDelete filter~!', filter);\n        filter && onFilterDelete(filter);\n    };\n    // console.log(nearAptPriceInfo);\n    // console.log();\n\n    // highestPriceApts.map((highestPriceApt) => ());\n\n    return (\n        <>\n            <article>\n                <h1>율곡아파트 최근 시세</h1>\n                <table className=\"tg\">\n                    <thead>\n                        <tr>\n                            <th>전용면적</th>\n                            <th>최근거래가</th>\n                            <th>최고가</th>\n                            <th>층수</th>\n                            <th>최근거래가 거래일</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {newestDealApts &&\n                            newestDealApts.map((newestDealApt, index) => {\n                                const highestValue =\n                                    highestPriceApts &&\n                                    highestPriceApts.filter(\n                                        (highestPriceApt) =>\n                                            highestPriceApt.전용면적 === newestDealApt.전용면적\n                                    );\n                                return (\n                                    <tr key={index}>\n                                        <th className=\"right\">{newestDealApt.전용면적}\n                                        </th>\n                                        <td className=\"right\">\n                                            {Number(newestDealApt.거래금액).toLocaleString(\"ko-KR\")}\n                                        </td>\n                                        <td className=\"right\">\n                                            {highestValue &&\n                                                Number(highestValue[0].거래금액).toLocaleString(\n                                                    \"ko-KR\"\n                                                )}\n                                        </td>\n                                        <td className=\"center\">{newestDealApt.층}층</td>\n                                        <td className=\"center\">\n                                            {to_date_format(newestDealApt.거래년월)}\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                    </tbody>\n                </table>\n            </article>\n\n            <article>\n                <h1>인근아파트 최근 시세({nearAptPriceInfo.length})</h1>\n                <table className=\"tg\">\n                    <thead>\n                        <tr>\n                            <th>아파트명</th>\n                            <th>전용면적</th>\n                            <th>최근거래가</th>\n                            <th>최고가</th>\n                            <th>최근거래가 거래일</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {nearAptPriceInfo &&\n                            nearAptPriceInfo.map((apt, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <th className=\"center\">{apt.아파트}\n                                        </th>\n                                        <td className=\"right\">{apt.전용면적}</td>\n                                        <td className=\"right\">\n                                            {Number(apt.거래금액).toLocaleString(\"ko-KR\")}\n                                        </td>\n                                        <td className=\"right\">\n                                            {Number(apt.최고가).toLocaleString(\"ko-KR\")}\n                                        </td>\n                                        <td className=\"center\">{to_date_format(apt.거래년월)}\n                                            <button className=\"habit-button habit-delete\" onClick={onDelete.bind(this, apt)}>\n                                                <i className=\"fas fa-minus-square\"></i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                    </tbody>\n                </table>\n                <div className=\"addFilter\">\n                    <button type=\"button\" id=\"addFilter\" onClick={onClickAddFilter}>{isVisibleSearchbox ? \"필터 숨기기\" : \"필터 보이기\"}</button>\n                </div>\n            </article>\n        </>\n    );\n};\n\nexport default AptInfo;\n","/Users/yanghm/Desktop/dev/workspace-react/apt-info/src/components/FilterBox.jsx",[],["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":59,"column":29,"nodeType":"64","messageId":"65","endLine":59,"endColumn":49},{"ruleId":"62","severity":1,"message":"66","line":70,"column":64,"nodeType":"64","messageId":"65","endLine":70,"endColumn":69},{"ruleId":"67","severity":1,"message":"68","line":93,"column":6,"nodeType":"69","endLine":93,"endColumn":15,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":103,"column":6,"nodeType":"69","endLine":103,"endColumn":21,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":167,"column":6,"nodeType":"69","endLine":167,"endColumn":18,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":188,"column":6,"nodeType":"69","endLine":188,"endColumn":15,"suggestions":"76"},{"ruleId":"62","severity":1,"message":"77","line":190,"column":9,"nodeType":"64","messageId":"65","endLine":190,"endColumn":28},{"ruleId":"67","severity":1,"message":"78","line":202,"column":26,"nodeType":"64","endLine":202,"endColumn":37},{"ruleId":"67","severity":1,"message":"78","line":226,"column":26,"nodeType":"64","endLine":226,"endColumn":37},{"ruleId":"67","severity":1,"message":"78","line":41,"column":17,"nodeType":"64","endLine":41,"endColumn":28},{"ruleId":"62","severity":1,"message":"79","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":18,"column":36,"nodeType":"82","endLine":18,"endColumn":85},{"ruleId":"62","severity":1,"message":"83","line":21,"column":12,"nodeType":"64","messageId":"65","endLine":21,"endColumn":18},{"ruleId":"62","severity":1,"message":"84","line":21,"column":20,"nodeType":"64","messageId":"65","endLine":21,"endColumn":29},{"ruleId":"58","replacedBy":"85"},{"ruleId":"60","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'setInquiryPeriodList' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'aptSizeObj' and 'onSet'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedSizeList' needs the current value of 'aptSizeObj'.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'openApi'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'filters' and 'openApi'. Either include them or remove the dependency array. If 'setYulgokAptInfo' needs the current value of 'openApi', you can also switch to useReducer instead of useState and read 'openApi' in the reducer.",["91"],"React Hook useMemo has missing dependencies: 'allAptInfo' and 'openApi'. Either include them or remove the dependency array.",["92"],"'onSearchRangeChange' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'FilterBox' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [aptName, aptSizeObj, onSet]",{"range":"100","text":"101"},"Update the dependencies array to be: [inquiryPeriod, openApi]",{"range":"102","text":"103"},"Update the dependencies array to be: [allAptInfo, filters, openApi]",{"range":"104","text":"105"},{"range":"106","text":"105"},[2638,2647],"[aptName, aptSizeObj, onSet]",[2865,2880],"[inquiryPeriod, openApi]",[4852,4864],"[allAptInfo, filters, openApi]",[5408,5417]]
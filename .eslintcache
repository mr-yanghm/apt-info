[{"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\index.js":"1","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\service\\dataApi.js":"2","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\app.jsx":"3","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\AptInfo.jsx":"4","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\SearchBar.jsx":"5","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\Hooks\\useInputs.jsx":"6","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\FilterBox.jsx":"7"},{"size":383,"mtime":1612935219559,"results":"8","hashOfConfig":"9"},{"size":7310,"mtime":1612922612056,"results":"10","hashOfConfig":"9"},{"size":4284,"mtime":1612935299013,"results":"11","hashOfConfig":"9"},{"size":3550,"mtime":1612936756175,"results":"12","hashOfConfig":"9"},{"size":1292,"mtime":1612922234085,"results":"13","hashOfConfig":"9"},{"size":973,"mtime":1612854180630,"results":"14","hashOfConfig":"9"},{"size":1188,"mtime":1612935356950,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1lonr0e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\index.js",[],["33","34"],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\service\\dataApi.js",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\app.jsx",["35","36","37","38","39","40","41","42"],"import React, { useCallback, useEffect, useMemo, useReducer, useState } from \"react\";\r\nimport \"./app.css\";\r\nimport AptInfo from \"./components/AptInfo\";\r\nimport SearchBar from './components/SearchBar';\r\nimport useInputs from './Hooks/useInputs';\r\n\r\nconst initialState = {\r\n  searchRangeList: [1],\r\n  selectedRangeIndex: 0,\r\n  filters: [\r\n  ]\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"REGIST_FILTER\":\r\n      return {\r\n        // inputs: initialState.inputs,\r\n        ...state, // 위와 같은 표현\r\n        filters: [...state.filters, { ...action.filter, id: new Date() }],\r\n      };\r\n    case \"REMOVE_FILTER\":\r\n      return {\r\n        ...state,\r\n        filters: state.filters.filter((filter) => filter.id !== action.filter.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst App = ({ openApi }) => {\r\n  const [searchRangeList, setSearchRangeList] = useState(initialState.searchRangeList);\r\n  const [selectedRangeIndex, setSelectedRangeIndex] = useState(initialState.selectedRangeIndex);\r\n  const [allAptInfo, setAllAptInfo] = useState([]);\r\n  const [yulgokAptInfo, setYulgokAptInfo] = useState({});\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [nearAptPriceInfo, setNearAptPriceInfo] = useState([]);\r\n\r\n  const [{ aptName, aptSize }, onChange, reset] = useInputs({\r\n    aptName: \"\",\r\n    aptSize: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    openApi.getAllAptInfo({ calcMonth: searchRangeList[selectedRangeIndex] }).then((data) => {\r\n      setAllAptInfo(data);\r\n      setYulgokAptInfo(openApi.getFilterAptInfo({ items: data, filterAptName: \"율곡\" }));\r\n      setNearAptPriceInfo(openApi.getFilterAptInfo({ items: data }).newestDealApts);\r\n      // console.log(openApi.getFilterAptInfo({ items: data }));\r\n\r\n      const initFilter = [\r\n        { aptName: '한라', aptSize: 41.85 },\r\n        { aptName: '한라', aptSize: 51.66 },\r\n        { aptName: '래미안', aptSize: 59.94 },\r\n        { aptName: '충무', aptSize: 41.4 },\r\n        { aptName: '충무', aptSize: 41.85 },\r\n        { aptName: '충무', aptSize: 42.75 },\r\n        { aptName: '충무', aptSize: 44.06 },\r\n        { aptName: '세종', aptSize: 58.46 },\r\n        { aptName: '세종', aptSize: 58.71 },\r\n        { aptName: '우륵', aptSize: 58.46 },\r\n        { aptName: '우륵', aptSize: 58.71 },\r\n      ];\r\n      for (const filter of initFilter) {\r\n        dispatch({\r\n          type: \"REGIST_FILTER\",\r\n          filter: {\r\n            aptName: filter.aptName,\r\n            aptSize: filter.aptSize,\r\n          },\r\n        });\r\n      }\r\n    })\r\n\r\n  }, [searchRangeList]);\r\n\r\n  const handleChange = (event) => {\r\n    openApi.getAllAptInfo({ calcMonth: event.target.value }).then((data) => {\r\n      setAllAptInfo(data);\r\n      setYulgokAptInfo(openApi.getFilterAptInfo({ items: data, filterAptName: \"율곡\" }));\r\n      setNearAptPriceInfo(openApi.getFilterAptInfo({ items: data }).newestDealApts);\r\n    })\r\n  }\r\n\r\n  const { filters } = state;\r\n\r\n  const onFilterRegist = useCallback(() => {\r\n    dispatch({\r\n      type: \"REGIST_FILTER\",\r\n      filter: {\r\n        aptName: aptName,\r\n        aptSize: aptSize,\r\n      },\r\n    });\r\n  });\r\n\r\n  const onFilterDelete = useCallback((filter) => {\r\n    dispatch({\r\n      type: \"REMOVE_FILTER\",\r\n      filter: {\r\n        id: filter.id,\r\n        aptName: filter.aptName,\r\n        aptSize: filter.aptSize,\r\n      },\r\n    })\r\n  })\r\n\r\n  useMemo(() => {\r\n    const result = [];\r\n    for (const filter of filters) {\r\n      result.push(...openApi.getFilterAptInfo({ items: allAptInfo, filterAptName: filter.aptName, filterAptSize: filter.aptSize }).newestDealApts);\r\n    }\r\n    if (filters.length == 0 && allAptInfo.length > 0) {\r\n      result.push(...openApi.getFilterAptInfo({ items: allAptInfo }).newestDealApts);\r\n    }\r\n    setNearAptPriceInfo(result);\r\n  }, [filters]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        handleChange={handleChange}\r\n        searchRangeList={searchRangeList}\r\n        aptName={aptName}\r\n        aptSize={aptSize}\r\n        onChange={onChange}\r\n        onFilterRegist={onFilterRegist}\r\n        onFilterDelete={onFilterDelete}\r\n        filters={filters} />\r\n      <AptInfo aptInfo={yulgokAptInfo} nearAptPriceInfo={nearAptPriceInfo} />\r\n    </>);\r\n};\r\n\r\nexport default App;\r\n","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\AptInfo.jsx",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\SearchBar.jsx",[],"C:\\_dev\\_workspace-react-basic\\apt-info\\src\\Hooks\\useInputs.jsx",["43"],"import { useCallback, useReducer } from \"react\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        [action.name]: action.value\r\n      };\r\n    case 'RESET':\r\n      return Object.keys(state).reduce((acc, current) => {\r\n        acc[current] = '';\r\n        return acc;\r\n      }, {});\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst useInputs = (initialForm) => {\r\n  const [form, dispatch] = useReducer(reducer, initialForm);\r\n  //change\r\n  const onChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"CHANGE\", name, value });\r\n  }, []);\r\n\r\n  // 방법 1\r\n  // const reset = useCallback(() => dispatch({ type: \"RESET\", form: initialForm }, [initialForm]));\r\n\r\n  // 방법 2\r\n  const reset = useCallback(() => dispatch({ type: \"RESET\" }, []));\r\n\r\n  // setForm(initialForm), [initialForm]);\r\n  return [form, onChange, reset];\r\n};\r\n\r\nexport default useInputs;\r\n","C:\\_dev\\_workspace-react-basic\\apt-info\\src\\components\\FilterBox.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":33,"column":27,"nodeType":"50","messageId":"51","endLine":33,"endColumn":45},{"ruleId":"48","severity":1,"message":"52","line":34,"column":30,"nodeType":"50","messageId":"51","endLine":34,"endColumn":51},{"ruleId":"48","severity":1,"message":"53","line":40,"column":42,"nodeType":"50","messageId":"51","endLine":40,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":76,"column":6,"nodeType":"56","endLine":76,"endColumn":23,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":88,"column":26,"nodeType":"50","endLine":88,"endColumn":37},{"ruleId":"54","severity":1,"message":"58","line":98,"column":26,"nodeType":"50","endLine":98,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":114,"column":24,"nodeType":"61","messageId":"62","endLine":114,"endColumn":26},{"ruleId":"54","severity":1,"message":"63","line":118,"column":6,"nodeType":"56","endLine":118,"endColumn":15,"suggestions":"64"},{"ruleId":"54","severity":1,"message":"58","line":32,"column":17,"nodeType":"50","endLine":32,"endColumn":28},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'setSearchRangeList' is assigned a value but never used.","Identifier","unusedVar","'setSelectedRangeIndex' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'openApi' and 'selectedRangeIndex'. Either include them or remove the dependency array. If 'setYulgokAptInfo' needs the current value of 'openApi', you can also switch to useReducer instead of useState and read 'openApi' in the reducer.","ArrayExpression",["67"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo has missing dependencies: 'allAptInfo' and 'openApi'. Either include them or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [openApi, searchRangeList, selectedRangeIndex]",{"range":"73","text":"74"},"Update the dependencies array to be: [allAptInfo, filters, openApi]",{"range":"75","text":"76"},[2534,2551],"[openApi, searchRangeList, selectedRangeIndex]",[3773,3782],"[allAptInfo, filters, openApi]"]